variables:
  # used for SDL and arcade
  - name: _TeamName
    value: AspNetCore
  - name: _DotNetPublishToBlobFeed
    value: true
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: SIGNALR_CPP
  - name: _DotNetValidationArtifactsCategory
    value: SIGNALR_CPP
  - name: Build.Repository.Clean
    value: true
  - name: _BuildConfig
    value: 'Debug'
  # used for post-build phases, internal builds only
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - group: DotNet-AspNet-SDLValidation-Params

trigger:
- main

stages:
- stage: build
  displayName: Build
  jobs:
  - template: .azure/default-build.yml
    parameters:
      agentOs: Windows
      jobName: Windows_Build_Test
      useCppRestSDK: false
      cMakeRunArgs: '-A x64'
      afterBuild:
      # Create empty build manifest for Build Asset Registry
      - powershell: "eng/common/sdk-task.ps1 -restore -task GenerateBuildManifest /p:PackagesToPublishPattern=$(Build.ArtifactStagingDirectory)/*.nupkg /p:AssetManifestFilePath=$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/AssetManifest/manifest.xml /p:ManifestBuildData=\"Location=https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/index.json\""
        displayName: Generate Build Manifest
        condition: eq(and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')), 'true')

- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - stage: post_build
    displayName: Post Build Validation
    jobs:
    - template: /eng/common/templates/job/execute-sdl.yml
      parameters:
        enable: true
        additionalParameters: ' -SourceToolsList @("policheck","credscan")
          -TsaInstanceURL $(_TsaInstanceURL)
          -TsaProjectName $(_TsaProjectName)
          -TsaNotificationEmail $(_TsaNotificationEmail)
          -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
          -TsaBugAreaPath $(_TsaBugAreaPath)
          -TsaIterationPath $(_TsaIterationPath)
          -TsaRepositoryName "AspNetCore"
          -TsaCodebaseName "AspNetCore"
          -TsaPublish $True
          -PoliCheckAdditionalRunConfigParams @("UserExclusionPath < $(Build.SourcesDirectory)/eng/PoliCheckExclusions.xml")'
        continueOnError: false
        downloadArtifacts: false
